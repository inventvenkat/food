services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "3003:80" # Changed host port to 3003 to avoid conflict
    depends_on:
      - server
    command: ["/bin/bash", "-c", "/usr/local/bin/wait-for-it.sh server:3001 -t 60 -- nginx -g 'daemon off;'"]
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3002:3001" # Changed host port to 3002 to avoid conflict
    env_file:
      - ./server/.env
    environment:
      # Override specific values for Docker network
      - DYNAMODB_ENDPOINT_OVERRIDE=http://dynamodb-local:8000
      - AWS_ACCESS_KEY_ID=dummy # For DynamoDB Local
      - AWS_SECRET_ACCESS_KEY=dummy # For DynamoDB Local
      - AWS_REGION=localhost # Or any valid region string, e.g., us-east-1, for DynamoDB Local
    volumes:
      - ./server/uploads:/usr/src/app/uploads # Persist uploads locally if needed during dev
    depends_on:
      # - mongo # Initially depends on Mongo
      - dynamodb-local # Uncomment after refactoring to DynamoDB
    command: ["/usr/local/bin/wait-for-it.sh", "dynamodb-local:8000", "--", "node", "index.js"]
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # mongo: # MongoDB service for current setup - Commented out for DynamoDB setup
  #   image: mongo:latest
  #   ports:
  #     - "27018:27017" # Changed host port to 27018 to avoid conflict
  #   volumes:
  #     - mongo-data:/data/db
  #   networks:
  #     - app-network

  dynamodb-local: # For use AFTER server refactoring
    image: amazon/dynamodb-local:latest
    ports:
      - "8000:8000" # Expose DynamoDB Local on host port 8000
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-inMemory"]
    # For development, using in-memory is more reliable and faster
    # If you need persistence, uncomment the volumes and dbPath options below:
    # command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "/home/dynamodblocal/data"]
    # volumes:
    #   - dynamodb-local-data:/home/dynamodblocal/data
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Djava.library.path=./DynamoDBLocal_lib
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongo-data:
  dynamodb-local-data:

networks:
  app-network:
    driver: bridge
