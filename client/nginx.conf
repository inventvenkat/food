server {
  listen 80;
  server_name localhost; # Or your domain name

  # Root directory for static files
  root /usr/share/nginx/html;
  index index.html index.htm;

  # Serve static assets directly
  location ~* \.(?:css|js|map|jpe?g|png|gif|ico|svg|woff2?|ttf|eot)$ {
    expires 1y;
    add_header Cache-Control "public";
  }

  # Handle client-side routing (e.g., for React Router)
  # For any request that doesn't match a static file, serve index.html
  location / {
    try_files $uri $uri/ /index.html;
  }

  # Proxy API requests to the backend server
  # Assumes your backend server will be available at 'server:3001'
  # 'server' would be the Docker service name for your backend
  # 3001 is the port your backend server listens on
  location /api {
    proxy_pass http://server:3001; # The 'server' here should match the service name in docker-compose.yml
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    
    # Security headers
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()";
    
    # Timeout settings
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
  }

  # Health check endpoint
  location /healthz {
    return 200 'OK';
    access_log off;
    log_not_found off;
  }
}
