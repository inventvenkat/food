# Copy this file to terraform.tfvars and fill in your actual values

# Project Configuration
project_name = "goodfood"
aws_region = "us-east-1"

# Security
jwt_secret = "YourSuperSecretJWTTokenForProduction123!"

# Docker Configuration
dockerhub_username = "your-dockerhub-username"

# AI Configuration (Required for recipe parsing functionality)
ai_provider = "xai"  # Options: xai, anthropic, groq, together, openai, ollama
ai_timeout = 15000

# xAI Configuration (Primary provider for cheapest/fastest)
xai_api_key = "xai-e8c9TRlFZElDdwN2hGfr6SPPAaYf81Y5dpP7v6NPYiSGfZT41n2nlGyZ8zPX96Zqh0C9qVt4ogY8DePP"
xai_model = "grok-2-latest"

# Alternative providers (fill in as needed)
# anthropic_api_key = "sk-ant-your-actual-api-key-here"
# anthropic_model = "claude-3-haiku-20240307"

# groq_api_key = "gsk_your-actual-api-key-here"
# groq_model = "llama3-8b-8192"

# together_api_key = "your-together-api-key-here"
# together_model = "meta-llama/Llama-2-7b-chat-hf"

# openai_api_key = "sk-your-actual-api-key-here"
# openai_model = "gpt-3.5-turbo"

# Ollama Configuration (for local inference fallback)
ollama_endpoint = "http://localhost:11434"
ollama_model = "llama3.2:1b"

# Database Table Names
users_table_name = "RecipeAppUsers"
recipes_table_name = "RecipeAppRecipes" 
recipe_collections_table_name = "RecipeAppRecipeCollections"
meal_plans_table_name = "RecipeAppMealPlans"

# Infrastructure
ec2_instance_type = "t2.micro"
min_size_asg = 1
max_size_asg = 2
desired_capacity_asg = 1

# SSL Certificate (update with your actual certificate ARN)
acm_certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/your-cert-id"